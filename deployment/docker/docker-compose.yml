services:
  postgres:
    image: postgres:15
    container_name: gdrive-dev-postgres
    environment:
      POSTGRES_DB: gdrive_sync
      POSTGRES_USER: gdrive_user
      POSTGRES_PASSWORD: gdrive_pass123
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U gdrive_user -d gdrive_sync"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - gdrive_network

  redis:
    image: redis:7-alpine
    container_name: gdrive-dev-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - gdrive_network

  rabbitmq:
    image: rabbitmq:3.12-management
    container_name: gdrive-dev-rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: gdrive_user
      RABBITMQ_DEFAULT_PASS: gdrive_pass123
      RABBITMQ_DEFAULT_VHOST: gdrive_sync
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - gdrive_network

  webhook-listener:
    build:
      context: ../../
      dockerfile: src/webhook_listener/Dockerfile
    container_name: gdrive-dev-webhook
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - ENV=${ENV:-development}
      - GDRIVE_FOLDER_ID=${GDRIVE_FOLDER_ID:-1TcG_cbVfaRvPUyaPaqyPZVEd5p_eA_s_}
      - AWS_S3_BUCKET=${AWS_S3_BUCKET:-gdrive-sync-demo}
      - AWS_REGION=${AWS_REGION:-eu-central-1}
      - RABBITMQ_URL=${RABBITMQ_URL:-amqp://gdrive_user:gdrive_pass123@rabbitmq:5672/gdrive_sync}
      - WEBHOOK_VERIFICATION_TOKEN=${WEBHOOK_VERIFICATION_TOKEN:-secure_webhook_token_2025}
      - WEBHOOK_HOST=${WEBHOOK_HOST:-0.0.0.0}
      - WEBHOOK_PORT=${WEBHOOK_PORT:-5000}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - PYTHONPATH=${PYTHONPATH:-/app}
      - ALLOWED_IPS=${ALLOWED_IPS:-0.0.0.0/0}
    ports:
      - "5000:5000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s
    networks:
      - gdrive_network

  s3-uploader:
    build:
      context: ../../
      dockerfile: src/s3_uploader/Dockerfile
    container_name: gdrive-dev-s3-uploader
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - ENV=${ENV:-development}
      - GDRIVE_FOLDER_ID=${GDRIVE_FOLDER_ID:-1TcG_cbVfaRvPUyaPaqyPZVEd5p_eA_s_}
      - AWS_S3_BUCKET=${AWS_S3_BUCKET:-gdrive-sync-demo}
      - AWS_REGION=${AWS_REGION:-eu-central-1}
      - RABBITMQ_URL=${RABBITMQ_URL:-amqp://gdrive_user:gdrive_pass123@rabbitmq:5672/gdrive_sync}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - PYTHONPATH=${PYTHONPATH:-/app}
    volumes:
      - ~/.aws:/root/.aws:ro
    healthcheck:
      test: ["CMD", "python", "-c", "import pika; pika.BlockingConnection(pika.URLParameters('${RABBITMQ_URL:-amqp://gdrive_user:gdrive_pass123@rabbitmq:5672/gdrive_sync}'))"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s
    networks:
      - gdrive_network

  auto-scheduler:
    build:
      context: ../../
      dockerfile: src/scheduler/Dockerfile
    container_name: gdrive-dev-scheduler
    depends_on:
      webhook-listener:
        condition: service_healthy
    environment:
      - ENV=${ENV:-development}
      - GDRIVE_FOLDER_ID=${GDRIVE_FOLDER_ID:-1TcG_cbVfaRvPUyaPaqyPZVEd5p_eA_s_}
      - AWS_S3_BUCKET=${AWS_S3_BUCKET:-gdrive-sync-demo}
      - AWS_REGION=${AWS_REGION:-eu-central-1}
      - WEBHOOK_URL=${WEBHOOK_URL:-http://webhook-listener:5000/webhook}
      - WEBHOOK_VERIFICATION_TOKEN=${WEBHOOK_VERIFICATION_TOKEN:-secure_webhook_token_2025}
      - SYNC_CHECK_INTERVAL_MINUTES=${SYNC_CHECK_INTERVAL_MINUTES:-2}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - PYTHONPATH=${PYTHONPATH:-/app}
    volumes:
      - ../../sync_state.json:/app/sync_state.json
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://webhook-listener:5000/health', timeout=5)"]
      interval: 60s
      timeout: 15s
      retries: 3
      start_period: 60s
    networks:
      - gdrive_network

  prometheus:
    image: prom/prometheus:latest
    container_name: gdrive-dev-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ../../monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - gdrive_network

  grafana:
    image: grafana/grafana:latest
    container_name: gdrive-dev-grafana
    depends_on:
      - prometheus
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ../../monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ../../monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    networks:
      - gdrive_network

  node-exporter:
    image: prom/node-exporter:latest
    container_name: gdrive-dev-node-exporter
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
    networks:
      - gdrive_network

volumes:
  postgres_data:
  redis_data:
  rabbitmq_data:
  prometheus_data:
  grafana_data:

networks:
  gdrive_network:
    driver: bridge
